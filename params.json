{"name":"Chronology","tagline":"","body":"# Chronology\r\n\r\n[![Build Status](https://travis-ci.org/xyziemba/chronology.svg?branch=test)](https://travis-ci.org/xyziemba/chronology)\r\n\r\nChronology watches and records every change you make to a file in a Git repository. It's perpetual undo – go back to two hours ago or two days ago.\r\n\r\nChronology also records all your work, as you do it, in almost real time. You can go analyze that data to understand *how* you built a product, *why* you made changes, and *what* you can do to become more productive. Tools to help analyze your edit history are the next step after Chronology.\r\n\r\n## Installing\r\n\r\n### Dependencies\r\n\r\n* Python 2.7 – Not tested with anything <2.7\r\n* OS X. Windows and Linux are coming later.\r\n* pyuv, pygit2, psutil\r\n\r\n#### OS X\r\n\r\n    brew tap xyziemba/brew\r\n    brew install chronology\r\n\r\n#### Linux\r\n\r\n**NOT SUPPORTED YET**\r\n\r\n    pip install pyuv\r\n    pip install pygit2\r\n    git clone ...\r\n    # TODO...\r\n\r\n## Usage\r\n\r\n    # add a directory to watch\r\n    chronology.py add-dir my_project_directory\r\n    \r\n    # start chronology daemon\r\n    chronology.py start\r\n    \r\n    # when you're done...\r\n    # shutdown chronology\r\n    chronology.py stop\r\n    \r\n## FAQ\r\n\r\n#### What's the roadmap going forward?\r\n\r\nI'm still figuring that out. :)\r\n\r\n#### How do I undo everything that Chronology did to my repo?\r\n\r\nChronology adds its own set of references and objects into your Git repository. These take up space, but generally won't impact your repository.\r\n\r\nChronology's references all have the form `refs/chronology/<sha1>`. You can delete all of them by running the following command in a bash shell:\r\n\r\n    git show-ref | grep refs/chronology/.*$ -o | xargs git update-ref -d\r\n\r\nExtra git objects will automatically get cleaned up the next time your repository is optimized, but you can force that by running:\r\n\r\n    git gc\r\n\r\n## Development\r\n\r\nSetting up your environment:\r\n\r\n    # install libgit2\r\n    brew install libgit2 # on mac\r\n    cat requirements.txt | xargs pip install\r\n\r\nIf pygit2 fails to build, you probably have a version mismatch\r\nbetween the version of pygit2 and libgit2. Read about installing\r\npygit2 at http://www.pygit2.org/install.html.\r\n\r\nRun tests with tox:\r\n\r\n    pip install tox\r\n    tox\r\n\r\n\r\n\r\n## Feedback\r\n\r\nChronology is a rough draft right now. Please log issues to this repository, or send a pull request if you're feeling adventurous.\r\n\r\nI can also be reached by email at xy.ziemba@gmail.com.","google":"UA-67417752-1","note":"Don't delete this file! It's used internally to help with page regeneration."}